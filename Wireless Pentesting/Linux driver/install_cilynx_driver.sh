#!/bin/bash

# Exit if any command exits with a non-zero status code
set -e

REPO_URL="https://github.com/cilynx/rtl88x2bu.git"
CLONE_DIR="$HOME/Downloads/rtl88x2bu"

# Print error messages and exits
function handle_error {
    echo "Error occurred in script at line: $1"
    exit 1
}

# catch any error and call handle_error
trap 'handle_error $LINENO' ERR

# Check and install dependencies
echo "Checking and installing dependencies..."
sudo apt-get update
sudo apt-get install -y git rsync dkms linux-headers-$(uname -r)

# Step 1: Clone the repository
echo "Cloning repository from $REPO_URL..."
if [ ! -d "$CLONE_DIR" ]; then
    git clone $REPO_URL $CLONE_DIR
else
    echo "Repository already cloned at $CLONE_DIR, updating..."
    cd $CLONE_DIR
    git pull
    cd -
fi

# Step 2: Move to the cloned directory
cd $CLONE_DIR

# Step 3: Get the package version from dkms.conf
echo "Extracting version from dkms.conf..."
VER=$(sed -n 's/\PACKAGE_VERSION="\(.*\)"/\1/p' dkms.conf)

if [ -z "$VER" ]; then
    echo "Failed to extract version from dkms.conf. Using default version 1.0"
    VER="1.0"
fi

# Step 4: Copy driver source files to /usr/src for DKMS
echo "Copying driver source files to /usr/src/rtl88x2bu-${VER}..."
sudo rsync -rvhP ./ /usr/src/rtl88x2bu-${VER}

# Step 5: Add the driver to DKMS
echo "Adding driver to DKMS..."
sudo dkms add -m rtl88x2bu -v ${VER}

# Step 6: Build the driver
echo "Building the driver with DKMS..."
sudo dkms build -m rtl88x2bu -v ${VER}

# Step 7: Install the driver
echo "Installing the driver..."
sudo dkms install -m rtl88x2bu -v ${VER}

# Step 8: Load the driver into the kernel
echo "Loading the driver into the kernel..."
sudo modprobe 88x2bu

# Step 9: Confirmation message
echo "Driver installation complete! Your wireless adapter should now be recognized."

# Step 10: Check DKMS status
dkms status

echo "Script finished successfully!"
echo "Reboot your system to ensure all changes take effect."
read -p "Do you want to reboot now? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
    sudo reboot
fi